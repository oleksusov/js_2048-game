{"version":3,"sources":["scripts/main.js"],"names":["boardSize","gameBoard","document","querySelector","gameScore","button","messageStart","messageLose","messageWin","keyDown","addEventListener","handlerSlide","e","removeEventListener","code","slideLeft","setTimeout","createTile","slideRight","slideDown","slideUp","removeClassMerged","createBoard","r","c","cell","createElement","classList","add","append","getStart","querySelectorAll","forEach","tile","remove","innerText","getWin","y","x","found","Math","floor","random","getElementById","value","id","style","setProperty","checkGameOver","createValuesArray","values","i","j","push","checkGameWin","some","arr","includes","canSlideTiles","mergedTile","horizontalMoveTile","horizontalMergeTiles","verticalMoveTile","verticalMergeTiles","tilesHaveMoved","currentTile","iterator","nextValue","nextTile","contains","window","onload","preventDefault","blur"],"mappings":"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","file":"main.c6ba6ace.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst boardSize = 4;\r\nconst gameBoard = document.querySelector('.game-board');\r\nconst gameScore = document.querySelector('.game-score');\r\nconst button = document.querySelector('.button');\r\nconst messageStart = document.querySelector('.message-start');\r\nconst messageLose = document.querySelector('.message-lose');\r\nconst messageWin = document.querySelector('.message-win');\r\n\r\nfunction keyDown() {\r\n  document.addEventListener('keydown', handlerSlide);\r\n}\r\n\r\nconst handlerSlide = e => {\r\n  document.removeEventListener('keydown', handlerSlide);\r\n\r\n  switch (e.code) {\r\n    case 'ArrowLeft':\r\n      if (slideLeft()) {\r\n        setTimeout(() => {\r\n          createTile();\r\n        }, 200);\r\n      }\r\n      break;\r\n\r\n    case 'ArrowRight':\r\n      if (slideRight()) {\r\n        setTimeout(() => {\r\n          createTile();\r\n        }, 200);\r\n      }\r\n      break;\r\n\r\n    case 'ArrowDown':\r\n      if (slideDown()) {\r\n        setTimeout(() => {\r\n          createTile();\r\n        }, 200);\r\n      }\r\n      break;\r\n\r\n    case 'ArrowUp':\r\n      if (slideUp()) {\r\n        setTimeout(() => {\r\n          createTile();\r\n        }, 200);\r\n      }\r\n      break;\r\n\r\n    default:\r\n      return true;\r\n  }\r\n\r\n  setTimeout(() => {\r\n    removeClassMerged();\r\n    keyDown();\r\n  }, 200);\r\n};\r\n\r\nwindow.onload = function() {\r\n  createBoard();\r\n};\r\n\r\nfunction createBoard() {\r\n  for (let r = 0; r < boardSize; r++) {\r\n    for (let c = 0; c < boardSize; c++) {\r\n      const cell = document.createElement('div');\r\n\r\n      cell.classList.add('cell');\r\n      gameBoard.append(cell);\r\n    }\r\n  }\r\n}\r\n\r\nbutton.addEventListener('click', e => {\r\n  e.preventDefault();\r\n\r\n  button.classList.remove('start');\r\n  button.classList.add('restart');\r\n  button.innerText = 'Restart';\r\n  button.blur();\r\n\r\n  getStart();\r\n});\r\n\r\nfunction getStart() {\r\n  document.querySelectorAll('.tile')\r\n    .forEach(tile => tile.remove());\r\n\r\n  gameScore.innerText = '0';\r\n  messageStart.classList.add('hidden');\r\n  messageLose.classList.add('hidden');\r\n  messageWin.classList.add('hidden');\r\n\r\n  keyDown();\r\n  createTile();\r\n  createTile();\r\n};\r\n\r\nfunction getWin() {\r\n  messageWin.classList.remove('hidden');\r\n  button.classList.remove('restart');\r\n  button.classList.add('start');\r\n  button.innerText = 'Start';\r\n  document.removeEventListener('keydown', handlerSlide);\r\n}\r\n\r\nfunction createTile() {\r\n  let y;\r\n  let x;\r\n  let found;\r\n\r\n  do {\r\n    y = Math.floor(Math.random() * boardSize);\r\n    x = Math.floor(Math.random() * boardSize);\r\n    found = !!document.getElementById(`${y}-${x}`);\r\n  } while (found);\r\n\r\n  const tile = document.createElement('div');\r\n  const value = Math.random() < 0.9 ? 2 : 4;\r\n\r\n  tile.id = `${y}-${x}`;\r\n  tile.classList.add('tile', `tile--${value}`);\r\n  tile.style.setProperty('--x', x);\r\n  tile.style.setProperty('--y', y);\r\n  tile.innerText = value;\r\n  gameBoard.append(tile);\r\n\r\n  if (checkGameOver()) {\r\n    messageLose.classList.remove('hidden');\r\n  }\r\n}\r\n\r\nfunction createValuesArray() {\r\n  const values = [];\r\n\r\n  for (let i = 0; i < boardSize; i++) {\r\n    values[i] = [];\r\n\r\n    for (let j = 0; j < boardSize; j++) {\r\n      if (document.getElementById(`${i}-${j}`)) {\r\n        values[i].push(document.getElementById(`${i}-${j}`).innerText);\r\n      } else {\r\n        values[i].push('');\r\n      }\r\n    }\r\n  }\r\n\r\n  return values;\r\n}\r\n\r\nfunction checkGameWin() {\r\n  const values = createValuesArray();\r\n\r\n  return values.some(arr => arr.includes('2048'));\r\n}\r\n\r\nfunction checkGameOver() {\r\n  const values = createValuesArray();\r\n\r\n  for (let r = 0; r < boardSize; r++) {\r\n    for (let c = 0; c < boardSize; c++) {\r\n      if (!values[r][c] || canSlideTiles(values, r, c)) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction canSlideTiles(values, r, c) {\r\n  if ((r > 0 && values[r][c] === values[r - 1][c])\r\n  || (r < boardSize - 1 && values[r][c] === values[r + 1][c])\r\n  || (c > 0 && values[r][c] === values[r][c - 1])\r\n  || (c < boardSize - 1 && values[r][c] === values[r][c + 1])) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction removeClassMerged() {\r\n  const mergedTiles = document.querySelectorAll('.merged');\r\n\r\n  mergedTiles.forEach(mergedTile => mergedTile.classList.remove('merged'));\r\n}\r\n\r\nfunction horizontalMoveTile(tile, y, x) {\r\n  tile.id = `${y}-${x}`;\r\n  tile.style.setProperty('--x', x);\r\n}\r\n\r\nfunction horizontalMergeTiles(tile, y, x) {\r\n  const value = +tile.innerText;\r\n\r\n  document.getElementById(`${y}-${x}`).remove();\r\n  tile.id = `${y}-${x}`;\r\n  tile.innerText = +tile.innerText * 2;\r\n  tile.style.setProperty('--x', x);\r\n  tile.classList.remove(`tile--${value}`);\r\n  tile.classList.add(`tile--${value * 2}`, 'merged');\r\n  gameScore.innerText = +gameScore.innerText + value * 2;\r\n\r\n  if (checkGameWin()) {\r\n    getWin();\r\n  }\r\n}\r\n\r\nfunction verticalMoveTile(tile, y, x) {\r\n  tile.id = `${y}-${x}`;\r\n  tile.style.setProperty('--y', y);\r\n}\r\n\r\nfunction verticalMergeTiles(tile, y, x) {\r\n  const value = +tile.innerText;\r\n\r\n  document.getElementById(`${y}-${x}`).remove();\r\n  tile.id = `${y}-${x}`;\r\n  tile.innerText = +tile.innerText * 2;\r\n  tile.style.setProperty('--y', y);\r\n  tile.classList.remove(`tile--${value}`);\r\n  tile.classList.add(`tile--${value * 2}`, 'merged');\r\n  gameScore.innerText = +gameScore.innerText + value * 2;\r\n\r\n  if (checkGameWin()) {\r\n    getWin();\r\n  }\r\n}\r\n\r\nfunction slideLeft() {\r\n  let tilesHaveMoved = false;\r\n\r\n  for (let r = 0; r < boardSize; r++) {\r\n    for (let c = 0; c < boardSize; c++) {\r\n      const currentTile = document.getElementById(`${r}-${c}`);\r\n\r\n      if (currentTile) {\r\n        let x;\r\n        let iterator = c;\r\n        let nextValue = '';\r\n\r\n        while (iterator > 0 && nextValue === '') {\r\n          iterator--;\r\n\r\n          const nextTile = document.getElementById(`${r}-${iterator}`);\r\n\r\n          nextValue = (nextTile)\r\n            ? +nextTile.innerText\r\n            : '';\r\n        }\r\n\r\n        if (\r\n          nextValue === +currentTile.innerText\r\n            && !document.getElementById(`${r}-${iterator}`)\r\n              .classList.contains('merged')\r\n            && nextValue !== ''\r\n        ) {\r\n          x = iterator;\r\n          horizontalMergeTiles(currentTile, r, x);\r\n        } else if (nextValue === '') {\r\n          x = 0;\r\n          horizontalMoveTile(currentTile, r, x);\r\n        } else {\r\n          x = iterator + 1;\r\n          horizontalMoveTile(currentTile, r, x);\r\n        }\r\n\r\n        if (c !== x) {\r\n          tilesHaveMoved = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return tilesHaveMoved;\r\n}\r\n\r\nfunction slideRight() {\r\n  let tilesHaveMoved = false;\r\n\r\n  for (let r = 0; r < boardSize; r++) {\r\n    for (let c = boardSize - 1; c >= 0; c--) {\r\n      const currentTile = document.getElementById(`${r}-${c}`);\r\n\r\n      if (currentTile) {\r\n        let x;\r\n        let iterator = c;\r\n        let nextValue = '';\r\n\r\n        while (iterator < boardSize - 1 && nextValue === '') {\r\n          iterator++;\r\n\r\n          const nextTile = document.getElementById(`${r}-${iterator}`);\r\n\r\n          nextValue = (nextTile)\r\n            ? +nextTile.innerText\r\n            : '';\r\n        }\r\n\r\n        if (\r\n          nextValue === +currentTile.innerText\r\n            && !document.getElementById(`${r}-${iterator}`)\r\n              .classList.contains('merged')\r\n            && nextValue !== ''\r\n        ) {\r\n          x = iterator;\r\n          horizontalMergeTiles(currentTile, r, x);\r\n        } else if (nextValue === '') {\r\n          x = boardSize - 1;\r\n          horizontalMoveTile(currentTile, r, x);\r\n        } else {\r\n          x = iterator - 1;\r\n          horizontalMoveTile(currentTile, r, x);\r\n        }\r\n\r\n        if (c !== x) {\r\n          tilesHaveMoved = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return tilesHaveMoved;\r\n}\r\n\r\nfunction slideDown() {\r\n  let tilesHaveMoved = false;\r\n\r\n  for (let c = 0; c < boardSize; c++) {\r\n    for (let r = boardSize - 1; r >= 0; r--) {\r\n      const currentTile = document.getElementById(`${r}-${c}`);\r\n\r\n      if (currentTile) {\r\n        let y;\r\n        let iterator = r;\r\n        let nextValue = '';\r\n\r\n        while (iterator < boardSize - 1 && nextValue === '') {\r\n          iterator++;\r\n\r\n          const nextTile = document.getElementById(`${iterator}-${c}`);\r\n\r\n          nextValue = (nextTile)\r\n            ? +nextTile.innerText\r\n            : '';\r\n        }\r\n\r\n        if (\r\n          nextValue === +currentTile.innerText\r\n            && !document.getElementById(`${iterator}-${c}`)\r\n              .classList.contains('merged')\r\n            && nextValue !== ''\r\n        ) {\r\n          y = iterator;\r\n          verticalMergeTiles(currentTile, y, c);\r\n        } else if (nextValue === '') {\r\n          y = boardSize - 1;\r\n          verticalMoveTile(currentTile, y, c);\r\n        } else {\r\n          y = iterator - 1;\r\n          verticalMoveTile(currentTile, y, c);\r\n        }\r\n\r\n        if (r !== y) {\r\n          tilesHaveMoved = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return tilesHaveMoved;\r\n}\r\n\r\nfunction slideUp() {\r\n  let tilesHaveMoved = false;\r\n\r\n  for (let c = 0; c < boardSize; c++) {\r\n    for (let r = 0; r < boardSize; r++) {\r\n      const currentTile = document.getElementById(`${r}-${c}`);\r\n\r\n      if (currentTile) {\r\n        let y;\r\n        let iterator = r;\r\n        let nextValue = '';\r\n\r\n        while (iterator > 0 && nextValue === '') {\r\n          iterator--;\r\n\r\n          const nextTile = document.getElementById(`${iterator}-${c}`);\r\n\r\n          nextValue = (nextTile)\r\n            ? +nextTile.innerText\r\n            : '';\r\n        }\r\n\r\n        if (\r\n          nextValue === +currentTile.innerText\r\n            && !currentTile.classList.contains('merged')\r\n            && nextValue !== ''\r\n        ) {\r\n          y = iterator;\r\n          verticalMergeTiles(currentTile, y, c);\r\n        } else if (nextValue === '') {\r\n          y = 0;\r\n          verticalMoveTile(currentTile, y, c);\r\n        } else {\r\n          y = iterator + 1;\r\n          verticalMoveTile(currentTile, y, c);\r\n        }\r\n\r\n        if (r !== y) {\r\n          tilesHaveMoved = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return tilesHaveMoved;\r\n}\r\n"]}